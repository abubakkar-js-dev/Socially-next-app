// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(cuid())
  email String @unique
  username String @unique
  name String?
  bio String?
  image String?
  location String?
  website String?

  createdAt DateTime @default(now()) // member since 2020
  updatedAt DateTime @updatedAt

  // relationships
  posts Post[]
  comments Comment[]
  likes Like[]

  followers Follows[] @relation("following") // users that follow this user
  following Follows[] @relation("follower") // users that this user follows

  notifications Notification[] @relation("userNotifications") // notifications received by the user
  notificationCreated Notification[] @relation("notificationCreator") // notifications created by the user

}


model Post {
  id String @id @default(cuid())
  authorId String
  content String?
  image String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relational
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade) // cascade delete means if the user is deleted, all their posts are also deleted 
}